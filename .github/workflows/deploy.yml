name: Deploy to EC2 on main

on:
  push:
    branches: ['main']
  workflow_dispatch:

concurrency:
  group: deploy-ec2-main
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH and Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            set -e
            BASE_DIR="/"
            REPO_DIR="/BabMukDang-Socket"
            REPO_URL="${{ secrets.EC2_REPO_SSH }}" # e.g., git@github.com:owner/BabMukDang-Socket.git

            mkdir -p "$REPO_DIR"
            cd "$REPO_DIR" || { cd "$BASE_DIR"; [ -n "${REPO_URL:-}" ] && git clone "$REPO_URL" "BabMukDang-Socket"; cd "$REPO_DIR"; }

            # First-time bootstrap if the repo is not present
            if [ ! -d .git ]; then
              if [ -z "${REPO_URL:-}" ]; then
                echo "Repository not found at $REPO_DIR and EC2_REPO_SSH is not set. Set EC2_REPO_SSH to SSH URL (e.g., git@github.com:owner/BabMukDang-Socket.git)." >&2
                exit 1
              fi
              mkdir -p ~/.ssh
              ssh-keyscan -H github.com >> ~/.ssh/known_hosts 2>/dev/null || true
              git clone "$REPO_URL" .
            fi

            git fetch --all --prune
            git checkout main
            git reset --hard origin/main
            # Ensure latest images and rebuild containers (supports both v1 and v2 compose)
            if docker compose version >/dev/null 2>&1; then SUDO_DC="docker compose"; else SUDO_DC="docker-compose"; fi
            $SUDO_DC pull || true
            $SUDO_DC up --build -d
            # Optional cleanup (non-fatal)
            sudo docker system prune -f || true
